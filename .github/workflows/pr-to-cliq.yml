name: GitHub Notifications to Zoho Cliq

on:
  pull_request:
    types: [opened, closed, review_requested]
  push:
    branches:
      - main

jobs:
  send-to-cliq:
    runs-on: ubuntu-latest
    steps:
      - name: Send Event Notification to Cliq
        env:
          CLIQ_WEBHOOK_URL: https://cliq.zoho.com/company/779974041/api/v2/channelsbyname/prtocliq/message?zapikey=1001.f9e733d0afd10db830565de7179030a3.a4d83ef0250bb0ff5135997314a39940
          GITHUB_CLIQ_MAPPING: ${{ vars.GIT_CLIQ_MAPPING }}
        run: |
          EVENT_TYPE=""
          TITLE=""
          URL=""
          AUTHOR=""
          CARD_PAYLOAD=""

          if [ "${{ github.event_name }}" == "pull_request" ]; then
            URL="${{ github.event.pull_request.html_url }}"
            TITLE="${{ github.event.pull_request.title }}"
            AUTHOR="${{ github.event.pull_request.user.login }}"

            if [ "${{ github.event.action }}" == "opened" ]; then
              EVENT_TYPE="🚀 New Pull Request Opened"
              CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "New Pull Request has been opened! Here are the details:",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Pull Request Details",
                "data": [
                  "📋 Title: ${TITLE}",
                  "👤 Author: ${AUTHOR}",
                  "🔗 Link: ${URL}",
                  "📅 Status: Opened",
                  "⏰ Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
                ]
              }
            ]
          }
          EOF
              )

            elif [ "${{ github.event.action }}" == "closed" ]; then
              if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
                EVENT_TYPE="✅ Pull Request Merged"
                MERGED_BY="${{ github.event.pull_request.merged_by.login }}"
                CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "Pull Request has been successfully merged! 🎉",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Merge Details",
                "data": [
                  "📋 Title: ${TITLE}",
                  "👤 Author: ${AUTHOR}",
                  "🔀 Merged By: ${MERGED_BY}",
                  "🔗 Link: ${URL}",
                  "✅ Status: Merged Successfully",
                  "⏰ Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
                ]
              }
            ]
          }
          EOF
                )
              else
                EVENT_TYPE="❌ Pull Request Closed Without Merge"
                CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "Pull Request was closed without merging.",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Closure Details",
                "data": [
                  "📋 Title: ${TITLE}",
                  "👤 Author: ${AUTHOR}",
                  "🔗 Link: ${URL}",
                  "❌ Status: Closed Without Merge",
                  "⏰ Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
                ]
              }
            ]
          }
          EOF
                )
              fi

            elif [ "${{ github.event.action }}" == "review_requested" ]; then
              EVENT_TYPE="🔎 Review Requested on Pull Request"
              REVIEWER="${{ github.event.requested_reviewer.login }}"
              REVIEWER_EMAIL=$(echo "$GITHUB_CLIQ_MAPPING" | jq -r --arg user "$REVIEWER" '.[$user] // ""')
              
              if [ ! -z "$REVIEWER_EMAIL" ]; then
                REVIEWER_MENTION="@$REVIEWER_EMAIL"
              else
                REVIEWER_MENTION="$REVIEWER (Please review)"
              fi

              CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "Review has been requested on a Pull Request! 👀",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Review Request Details",
                "data": [
                  "📋 Title: ${TITLE}",
                  "👤 Author: ${AUTHOR}",
                  "👁️ Reviewer: ${REVIEWER_MENTION}",
                  "🔗 Link: ${URL}",
                  "🔍 Status: Review Requested",
                  "⏰ Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
                ]
              }
            ]
          }
          EOF
              )

            else
              EVENT_TYPE="ℹ️ Unknown PR Event"
              CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "Unknown Pull Request event occurred.",
            "bot": {
              "name": "GitHub Bot",
              "image": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
            },
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Event Details",
                "data": [
                  "📋 Title: ${TITLE}",
                  "👤 Author: ${AUTHOR}",
                  "🔗 Link: ${URL}",
                  "❓ Status: Unknown Event",
                  "⏰ Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
                ]
              }
            ]
          }
          EOF
              )
            fi

          elif [ "${{ github.event_name }}" == "push" ]; then
            BRANCH_NAME="${{ github.ref }}"
            if [ "$BRANCH_NAME" == "refs/heads/main" ]; then
              COMMIT_MESSAGE="${{ github.event.head_commit.message }}"

              if ! echo "$COMMIT_MESSAGE" | grep -qE '\(#[0-9]+\)' && ! echo "$COMMIT_MESSAGE" | grep -qE 'Merge pull request #[0-9]+'; then
                EVENT_TYPE="🚨 Direct Push to Main Detected"
                AUTHOR="${{ github.actor }}"
                COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
                SHORT_SHA="${{ github.sha }}"
                SHORT_SHA="${SHORT_SHA:0:7}"

                CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "*⚠️ ALERT: Direct push to main branch detected!*",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Direct Push Details",
                "data": [
                  "📝 *Title:* ${COMMIT_MESSAGE}",
                  "👤 *Pushed By:* ${AUTHOR}",
                  "🔗 Link: ${COMMIT_URL}",
                ]
              }
            ]
          }
          EOF
                )
              fi
            fi
          fi

          if [ ! -z "$CARD_PAYLOAD" ]; then
            echo "Sending notification to Cliq..."
            curl -X POST "$CLIQ_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$CARD_PAYLOAD"
          fi
