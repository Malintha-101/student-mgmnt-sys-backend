name: GitHub Notifications to Zoho Cliq

on:
  pull_request:
    types: [opened, closed, review_requested]
  push:
    branches:
      - main

jobs:
  send-to-cliq:
    runs-on: ubuntu-latest
    concurrency:
      group: send-to-cliq
      cancel-in-progress: true
    steps:
      - name: Send Event Notification to Cliq
        env:
          CLIQ_WEBHOOK_URL: https://cliq.zoho.com/company/779974041/api/v2/channelsbyname/prtocliq/message?zapikey=1001.f9e733d0afd10db830565de7179030a3.a4d83ef0250bb0ff5135997314a39940
          GITHUB_CLIQ_MAPPING: ${{ vars.GIT_CLIQ_MAPPING }}
        run: |
          EVENT_TYPE=""
          TITLE=""
          URL=""
          AUTHOR=""
          MESSAGE=""

          if [ "${{ github.event_name }}" == "pull_request" ]; then
            URL="${{ github.event.pull_request.html_url }}"
            TITLE="${{ github.event.pull_request.title }}"
            AUTHOR="${{ github.event.pull_request.user.login }}"
            BRANCH_NAME="${{ github.event.pull_request.base.ref }}"

            if [ "${{ github.event.action }}" == "opened" ]; then
              if [ "$BRANCH_NAME" == "main" ]; then
                EVENT_TYPE="🚀 New Pull Request Opened"
                CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "*${EVENT_TYPE}*",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Pull Request Details",
                "data": [
                  "📋 *Title:* ${TITLE}",
                  "👤 *Author:* ${AUTHOR}"
                ]
              }
            ],
            "buttons": [
              {
                "label": "Open PR",
                "action": {
                  "type": "open.url",
                  "data": {
                    "web": "${URL}"
                  }
                }
              }
            ]
          }
          EOF
                )
              fi

            elif [ "${{ github.event.action }}" == "closed" ]; then
              if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
                if [ "$BRANCH_NAME" == "main" ]; then
                  EVENT_TYPE="✅ Pull Request Merged"
                  MERGED_BY="${{ github.event.pull_request.merged_by.login }}"
                  CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "*${EVENT_TYPE}*",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Merge Details",
                "data": [
                  "📋 *Title:* ${TITLE}",
                  "👤 *Author:* ${AUTHOR}",
                  "🔀 *Merged By:* ${MERGED_BY}"
                ]
              }
            ],
            "buttons": [
              {
                "label": "View PR",
                "action": {
                  "type": "open.url",
                  "data": {
                    "web": "${URL}"
                  }
                }
              }
            ]
          }
          EOF
                  )
                fi
              else
                EVENT_TYPE="❌ Pull Request Closed Without Merge"
                if [ "$BRANCH_NAME" == "main" ]; then
                  CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "*${EVENT_TYPE}*",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Closure Details",
                "data": [
                  "📋 *Title:* ${TITLE}",
                  "👤 *Author:* ${AUTHOR}"
                ]
              }
            ],
            "buttons": [
              {
                "label": "View PR",
                "action": {
                  "type": "open.url",
                  "data": {
                    "web": "${URL}"
                  }
                }
              }
            ]
          }
          EOF
                  )
                fi
              fi

            elif [ "${{ github.event.action }}" == "review_requested" ]; then
              EVENT_TYPE="🔎 Review Requested on Pull Request"
              REVIEWER="${{ github.event.requested_reviewer.login }}"
              REVIEWER_EMAIL=$(echo "$GITHUB_CLIQ_MAPPING" | jq -r --arg user "$REVIEWER" '.[$user] // ""')
              
              # Create the card payload first
              CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "*${EVENT_TYPE}*",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Review Request Details",
                "data": [
                  "📋 *Title:* ${TITLE}",
                  "👤 *Author:* ${AUTHOR}",
                  "🎯 *Reviewer:* ${REVIEWER}"
                ]
              }
            ],
            "buttons": [
              {
                "label": "Review PR",
                "action": {
                  "type": "open.url",
                  "data": {
                    "web": "${URL}"
                  }
                }
              }
            ]
          }
          EOF
              )
              
              # Extract zapikey from webhook URL for direct messaging
              ZAPIKEY=$(echo "$CLIQ_WEBHOOK_URL" | grep -o 'zapikey=[^&]*' | cut -d'=' -f2)
              
              if [ ! -z "$REVIEWER_EMAIL" ]; then
                echo "Sending review request card directly to reviewer: $REVIEWER_EMAIL"
                
                # Send the same card directly to the reviewer using extracted zapikey
                echo "Sending direct message to reviewer..."
                curl -X POST "https://cliq.zoho.com/api/v2/buddies/${REVIEWER_EMAIL}/message?zapikey=${ZAPIKEY}" \
                -H "Content-Type: application/json" \
                -d "$CARD_PAYLOAD"
                
                echo "Direct message sent to reviewer successfully"
              else
                echo "Warning: No email mapping found for reviewer: $REVIEWER"
              fi

            else
              EVENT_TYPE="ℹ️ Unknown PR Event"
              CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "*${EVENT_TYPE}*",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Event Details",
                "data": [
                  "📋 *Title:* ${TITLE}",
                  "👤 *Author:* ${AUTHOR}"
                ]
              }
            ],
            "buttons": [
              {
                "label": "View PR",
                "action": {
                  "type": "open.url",
                  "data": {
                    "web": "${URL}"
                  }
                }
              }
            ]
          }
          EOF
              )
            fi

          elif [ "${{ github.event_name }}" == "push" ]; then
            BRANCH_NAME="${{ github.ref }}"
            if [ "$BRANCH_NAME" == "refs/heads/main" ]; then
              COMMIT_MESSAGE="${{ github.event.head_commit.message }}"

              if ! echo "$COMMIT_MESSAGE" | grep -qE '\(#[0-9]+\)' && ! echo "$COMMIT_MESSAGE" | grep -qE 'Merge pull request #[0-9]+'; then
                EVENT_TYPE="🚨 Direct Push to Main Detected"
                AUTHOR="${{ github.actor }}"
                COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
                SHORT_SHA="${{ github.sha }}"
                SHORT_SHA="${SHORT_SHA:0:7}"

                CARD_PAYLOAD=$(cat <<EOF
          {
            "text": "*${EVENT_TYPE}*",
            "card": {
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "list",
                "title": "Direct Push Details",
                "data": [
                  "📝 *Title:* ${COMMIT_MESSAGE}",
                  "👤 *Pushed By:* ${AUTHOR}"
                ]
              }
            ],
            "buttons": [
              {
                "label": "View Commit",
                "action": {
                  "type": "open.url",
                  "data": {
                    "web": "${COMMIT_URL}"
                  }
                }
              }
            ]
          }
          EOF
                )
              fi
            fi
          fi

          # Send to channel (if CARD_PAYLOAD is set and not empty)
          if [ ! -z "$CARD_PAYLOAD" ]; then
            echo "Sending card notification to Cliq channel..."
            curl -X POST "$CLIQ_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$CARD_PAYLOAD"
          fi